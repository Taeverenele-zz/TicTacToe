const winningCombos = [
    [0, 1, 2],
    [3, 4, 5],
    [6, 7, 8],
    [0, 4, 8],
    [2, 4, 6],
    [0, 3, 6],
    [1, 4, 7],
    [2, 5, 8]
];
let gameBoard = document.getElementById('game_board');
let emptySquares = [0, 1, 2, 3, 4, 5, 6, 7, 8];
let newGameButton = document.getElementById('new_game');
let squares;
let squaresX = [];
let squaresO = [];


function buildBoard() {
    // build 3 rows
    for (let i = 0; i < 3; i++) {
        let row = document.createElement('div');
        // and append them to their parent div
        gameBoard.appendChild(row);
        // add class 'row'
        row.classList.add('row');
        // and for the first two rows
        if (i < 2) {
            // also add class 'border_bottom'
            row.classList.add('border_bottom');
        }
        // build 3 columns
        for (let j =0; j < 3; j++) {
            let col = document.createElement('div');
            // and append them to their parent div
            row.appendChild(col);
            // add class 'col'
            col.classList.add('col');
            // and for the first two columns
            if (j < 2) {
                // also add class 'border-right'
                col.classList.add('border_right');
            }
        }
    }
    createIdsForColumns();
};

function createIdsForColumns() {
    for (let j = 0; j < emptySquares.length; j++) {
        let col = document.getElementsByClassName('col');
        col[j].id = j;
    } 
};

function initGame() {
    hideWinningScreen()
    buildBoard();
    squares = Array.from(document.querySelectorAll('.col'));
    clickFunction();
    emptySquares = [0, 1, 2, 3, 4, 5, 6, 7, 8];
    for (let i = 0; i < squares.length; i++) {
        squares[i].innerHTML = '';
    }
};

function pickRandomNumber() {
    let random = Math.floor(Math.random() * (emptySquares.length -1));
    return random;
};

function clickFunction() {
    // loop through all squares on board
    for (let i = 0; i < squares.length; i++) {
    // every time you click on a square
        squares[i].addEventListener('click', function() {
            // store the clicked element in a variable
            let elementClicked = squares[i];
            // change the elementClicked.id value into a number and store it to a variable
            const id = +elementClicked.id;
            // if number stored in id variable has already been removed from the array
            if (!emptySquares.includes(id)) {
                // stop running this function
                return
            }
            // otherwise, change the clicked element's innerHTML
            elementClicked.innerHTML = 'X';
            // and remove the id number from the array
            emptySquares = emptySquares.filter(num => num !== id);
            squaresX.push(id);
            checkForWinner();
            setTimeout(computersTurn, 700);
        })
    }
};

function computersTurn() {
    // pickRandomNumber function generates a random index number in our array
    // store random number from pickRandomNumber function in a variable
    let randomNumber = pickRandomNumber();
    // if you get to the last square, exit this function
    if (randomNumber === -1) {
        return;
    }
    // using the index number generated by pickRandomFunction, store the number at that position in our array in a variable
    let computersSquare = emptySquares[randomNumber];
    // change the randomly picked square's innerHTML to 'O'
    document.getElementById(computersSquare).innerHTML = 'O';
    // and remove that id from the array
    emptySquares = emptySquares.filter(num => num !== computersSquare);
    squaresO.push(computersSquare);
    checkForWinner();
};

function checkForWinner() {
    for (let i = 0; i < winningCombos.length; i++) {
        const winningCombo = winningCombos[i];
        xMatchesAll = winningCombo.every(num => squaresX.includes(num));
        oMatchesAll = winningCombo.every(num => squaresO.includes(num));
        if(xMatchesAll) {
            setTimeout(displayWinningScreen, 500);
            break;
        } else if(oMatchesAll) {
            setTimeout(displayLosingScreen, 500);
            break;
        } else if (emptySquares === []) {
            console.log('Noone wins');
        }
    }
}


function displayWinningScreen() {
    while (gameBoard.firstChild) {
        gameBoard.removeChild(gameBoard.firstChild);
    }
    let newDiv = document.createElement('div');
    gameBoard.appendChild(newDiv);
    let winningMessage = document.createTextNode('You Win!');
    newDiv.appendChild(winningMessage);
    gameBoard.style.border = 'none';
    newDiv.style.fontSize = '100px';
    newDiv.style.color = 'red';
    newDiv.id = 'show';
}

function displayLosingScreen() {
    while (gameBoard.firstChild) {
        gameBoard.removeChild(gameBoard.firstChild);
    }
    let newDiv = document.createElement('div');
    gameBoard.appendChild(newDiv);
    let winningMessage = document.createTextNode('You Lose!');
    newDiv.appendChild(winningMessage);
    gameBoard.style.border = 'none';
    newDiv.style.fontSize = '100px';
    newDiv.style.color = 'red';
    newDiv.id = 'show';
}

function hideWinningScreen() {
    let divs = document.getElementsByTagName('div');
    for (let i = 0; i< divs.length; i++) {
        if (divs[i].id === 'show') {
            let div = divs[i];
            div.remove();
        }
    }
}

newGameButton.addEventListener('click', initGame);

initGame()